//=================================================================================================
//
// ウィンドウハンドルを取得するグローバルオブジェクト
//
//=================================================================================================


//-------------------------------------------------------------------------------------------------
// ヘッダファイル　インクルード
//-------------------------------------------------------------------------------------------------
#include "HWnd.h"


//-------------------------------------------------------------------------------------------------
// 定義
//-------------------------------------------------------------------------------------------------
namespace GAME
{
	//static の実体
	HWND HWnd::m_hWnd = nullptr;

#if	0
	//コンストラクタ
	HWnd::HWnd ()
	{
		//ウィンドウハンドルの取得
		EnumWindows( EnumWindowsProc, reinterpret_cast<LPARAM>(&m_hWnd) );
	}
#endif	//0

	//-------------------------------------------------------------------------------------------------
	//HWND取得のためのウィンドウ列挙コールバック関数
	//引数： lParam	(out)		ウィンドウハンドル取得の引数
	//-------------------------------------------------------------------------------------------------
	BOOL CALLBACK HWnd::EnumWindowsProc( HWND hWnd, LPARAM lParam )
	{
		//WINDOWS上のウィンドウを列挙し、そのウィンドウハンドルを引数にして、
		//列挙されたウィンドウの数だけこの関数が呼ばれる

		HWND* phWnd = (HWND*)lParam;

		//引数のウィンドウハンドルのプロセスを取得
		DWORD pid;
		GetWindowThreadProcessId( hWnd, &pid );

		//現在プロセスIDと同一のものがあったら保存
		if ( pid == GetCurrentProcessId() )
		{
			////TRACE_F(TEXT("process = %d, hwnd = %d\n"), GetCurrentProcessId(), hWnd );

			*phWnd = hWnd;
//			return FALSE;

			//同一のプロセスIDでも複数のウィンドウハンドルが存在するのでstatic変数に保存しておく方法にする
		}
		return TRUE;
	}

}	//namespace GAME

